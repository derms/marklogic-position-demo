<export><workspace name="position-setup"><query name="1. bitemporal setup" focus="false" active="true" content-source="as:5497110870981293542:" mode="javascript">declareUpdate({explicitCommit: true});
var temporal = require("/MarkLogic/temporal.xqy");
var validResult = temporal.axisCreate(
    "valid",
    cts.elementReference(fn.QName("", "validStart")),
    cts.elementReference(fn.QName("", "validEnd")));
var systemResult = temporal.axisCreate(
    "system",
    cts.elementReference(fn.QName("", "systemStart")),
    cts.elementReference(fn.QName("", "systemEnd")));

var collectionResult = temporal.collectionCreate(
"position", "system", "valid");
temporal.setUseLsqt("position", true);
xdmp.commit();</query><query name="2. load bitemporal documents" focus="false" active="true" content-source="as:5497110870981293542:" mode="javascript">declareUpdate();

//load the position temporal data in different transaction
function insertPositionData(filename, node, systemStartTime) {
  xdmp.eval('declareUpdate();  \n\
            temporal.documentInsert("position", "/domain/position/' + filename +'",' + node +', null, ["/type/position"]) \n\
            temporal.statementSetSystemTime(xs.dateTime("' + systemStartTime +'")); ',
            null,
            {
            "isolation" : "different-transaction"
            } );
}

function loadDirectoryContents(path) {
  var directoryContents = xdmp.filesystemDirectory(path);
  for(var i in directoryContents) {
    var dir = directoryContents[i];
    node = dir;
    if (dir.type="dir") {
        var dataFiles = xdmp.filesystemDirectory(dir.pathname);
        for(var j in dataFiles) {
            var file = dataFiles[j];
          if (file.type="file") {
             node = xdmp.toJSON(xdmp.fromJsonString(xdmp.filesystemFile(file.pathname)));
             systemStartTime = node.root.systemStart;
             insertPositionData(dir.filename, node, systemStartTime);
          }
        }
    }
  }
}
loadDirectoryContents('~/marklogic/position/data/position');</query><query name="3. delete bitemporal documents (useful)" focus="true" active="true" content-source="as:5497110870981293542:" mode="javascript">declareUpdate();
var temporal = require("/MarkLogic/temporal.xqy");
temporal.collectionSetOptions("position", ["updates-admin-override"]) ;
xdmp.directoryDelete("/");

</query></workspace></export>
