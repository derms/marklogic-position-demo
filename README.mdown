# MarkLogic-Node Generator

This application was generated by the MarkLogic-Node [Slush](https://github.com/klei/slush) generator, with the following components:

- [AngularJS](https://angularjs.org/)
- [Gulp](http://gulpjs.com/)
- [node.js](http://nodejs.org/): very thin layer, hosting the Angular code and proxying MarkLogic REST API requests
- [Roxy Deployer](https://github.com/marklogic/roxy): bootstrap MarkLogic databases, application servers, etc; scaffolding for MarkLogic REST API service extensions

## Install Required Dependencies

- [node.js](http://nodejs.org/download/)
- [npm](https://www.npmjs.com/): Built-in package manager for node (comes with
  node, but check to be sure you have latest version: `npm install -g npm`)
- [gulp](http://gulpjs.com/): Javascript task automation (`npm install -g
  gulp`)
- [Bower](http://bower.io/): A package manager for front-end libraries (`npm
  install -g bower`)
- [Git](https://git-scm.com/) - Roxy depends on this version control system
- [Ruby](https://www.ruby-lang.org/en/documentation/installation/) - Roxy
  depends on Ruby in order to run server configuration scripts
- [MarkLogic](https://www.marklogic.com/) - Requires Marklogic install (tested using 8.0-5.8)

## Example Install Commands

Tested against Amazon Linux

- sudo yum install nodejs npm --enablerepo=epel
- sudo npm install -g npm
- sudo npm install -g gulp
- sudo npm install -g bower
- sudo yum install git
- sudo yum install ruby
- download marklogic Binary from http://developer.marklogic.com/products and install using "sudo yum install MarkLogic-RHEL6-8.0-5.8.x86_64.rpm --nogpgcheck"
- git clone https://github.com/derms/marklogic-position-demo.git
- cd marklogic-position-demo; npm install; bower install
- sudo /etc/init.d/MarkLogic start
- Navigate to http://<server>:8001/ to initialise the installation - using admin/admin as the password
- ./ml local bootstrap;
- ./ml local deploy modules;
- Go to http://<hostname>:8000 (admin/admin)
- Import workspace from <git-clone-dir>/workspaces/position-setup.xml
- Select database "position-content" and Execute "1.a bitemporal setup"
- Select database "position-content" and Execute "1.b bitemporal setup"
- Select database "position-content" and Execute "2. load bitemporal documents" (note that you may have to change the directory to <git-clone-dir>/data/position in the script - and potentially update your directory permissions to allow read/execute priv's)


# Running the application
- cd  <git-clone-dir> (e.g. ~/marklogic-position-demo)
- gulp serve-local

# Application Overview

The application is a
